{"version":3,"sources":["components/container/Container.module.css","components/filter/Filter.module.css","components/contactList/ContactList.module.css","components/container/Container.js","redux/contacts/contacts-actions.js","components/contactEditor/ContactEditor.js","redux/contacts/contacts-selectors.js","components/filter/Filter.js","components/contactList/ContactList.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/contactEditor/ContactEditor.module.css"],"names":["module","exports","Container","children","className","container","wrapper","contactsActions","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","ContactEditor","useState","setName","setNumber","dispatch","useDispatch","handleChange","e","currentTarget","value","reset","nameId","numberId","contactEditor_form","onSubmit","preventDefault","label","htmlFor","placeholder","type","pattern","title","onChange","autoComplete","required","add_contact","getFilter","state","contacts","filter","getVisibleContacts","items","getContacts","normalizedFilter","toLowerCase","contact","includes","Filter","useSelector","contact_search","filter_input","ContactList","map","contactItem","contactDelete","onClick","onDeleteContact","App","createReducer","actions","find","alert","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.4f2916c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__17kML\",\"wrapper\":\"Container_wrapper__2DXIv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_search\":\"Filter_contact_search__14r7d\",\"filter_input\":\"Filter_filter_input__1uCZp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactList_contactItem__2hg6b\",\"contactDelete\":\"ContactList_contactDelete__1eyur\"};","import React from 'react';\nimport { container, wrapper } from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={container}>\n    <div className={wrapper}>{children}</div>\n  </div>\n);\n\nexport default Container;\n","import shortid from 'shortid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('contact/add', (name, number) => {\n  return {\n    payload: {\n      id: shortid.generate(),\n      name,\n      number,\n    },\n  };\n});\n\nconst deleteContact = createAction('contact/delete');\nconst changeFilter = createAction('contact/changeFilter');\n\nconst contactsActions = { addContact, deleteContact, changeFilter };\nexport default contactsActions;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\n\nimport shortid from 'shortid';\nimport {\n  contactEditor_form,\n  placeholder,\n  label,\n  add_contact,\n} from './ContactEditor.module.css';\n\nexport default function ContactEditor() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(contactsActions.addContact(name, number));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const nameId = shortid.generate();\n  const numberId = shortid.generate();\n\n  return (\n    <form className={contactEditor_form} onSubmit={handleSubmit}>\n      <label className={label} htmlFor={nameId} aria-label=\"Name\">\n        Name\n      </label>\n      <input\n        className={placeholder}\n        type=\"text\"\n        id={nameId}\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        onChange={handleChange}\n        placeholder=\"Enter a name\"\n        autoComplete=\"off\"\n        value={name}\n        required\n      />\n      <label className={label} htmlFor={numberId} aria-label=\"Number\">\n        Phone number\n      </label>\n      <input\n        className={placeholder}\n        type=\"tel\"\n        placeholder=\"Enter a phone number\"\n        autoComplete=\"off\"\n        id={numberId}\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        onChange={handleChange}\n        value={number}\n      />\n      <button type=\"submit\" className={add_contact}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(contact => contact.name.includes(normalizedFilter));\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\n\nimport { filter_input, contact_search } from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={contact_search}>\n      Find contact by name\n      <input\n        className={filter_input}\n        type=\"text\"\n        value={filter}\n        onChange={e =>\n          dispatch(contactsActions.changeFilter(e.currentTarget.value))\n        }\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\nimport contactsActions from '../../redux/contacts/contacts-actions';\n\nimport { contactItem, contactDelete } from './ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(contactsActions.deleteContact(id));\n\n  return (\n    <ul className=\"contactList\">\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={contactItem}>\n          <span>\n            {name}: {number}\n          </span>\n          {/* <span>{number}</span>  */}\n          <button\n            type=\"button\"\n            className={contactDelete}\n            onClick={() => onDeleteContact(id)}\n          ></button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import Container from './components/container';\nimport ContactEditor from './components/contactEditor/';\nimport Filter from './components/filter';\nimport ContactList from './components/contactList/';\n\nexport default function App() {\n  // const initialContacts = [\n  //   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  //   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  //   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  //   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  // ];\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactEditor />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => {\n    const savedContact = state.find(contact => contact.name === payload.name);\n    if (savedContact) {\n      alert(`${payload.name} is already in contacts`);\n      return state;\n    }\n\n    const savedNumber = state.find(\n      contact => contact.number === payload.number,\n    );\n\n    if (savedNumber) {\n      alert(`${payload.number} has already been saved`);\n      return state;\n    }\n\n    return [...state, payload];\n  },\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts/contacts-reducer';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport App from './App';\nimport { store, persistor } from './redux/store';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactEditor_form\":\"ContactEditor_contactEditor_form__7JYx0\",\"label\":\"ContactEditor_label__XFfht\",\"placeholder\":\"ContactEditor_placeholder__2Cte_\",\"add_contact\":\"ContactEditor_add_contact__118Bh\"};"],"sourceRoot":""}